<!-- Copyright 2011 Miyako Komooka -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:local="clr-namespace:iCalDocked" >

  <Style TargetType="Button" x:Key="base">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="FontSize" Value="11" />
    <Setter Property="ClickMode" Value="Press" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Cursor="{TemplateBinding Cursor}"
                Background="{TemplateBinding Background}">
            <ContentPresenter Content="{TemplateBinding Content}"
                              HorizontalAlignment="Center" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="Button" BasedOn="{StaticResource base}" />

  <Style TargetType="Button" BasedOn="{StaticResource base}" x:Key="LikeLabel">
    <Setter Property="Cursor" Value="Arrow"/>
    <Setter Property="FontSize" Value="12" />
  </Style>

  <Style TargetType="HyperlinkButton">
    <!-- Setter Property="Foreground" Value="#FF73A9D8" / -->
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="Padding" Value="2,0,2,0"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="ClickMode" Value="Press" />
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="HyperlinkButton">
          <Grid Cursor="{TemplateBinding Cursor}" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <!-- Storyboard>
                       <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UnderlineTextBlock" Storyboard.TargetProperty="Visibility" Duration="0">
                       <DiscreteObjectKeyFrame KeyTime="0">
                       <DiscreteObjectKeyFrame.Value>
                       <Visibility>Visible</Visibility>
                       </DiscreteObjectKeyFrame.Value>
                       </DiscreteObjectKeyFrame>
                       </ObjectAnimationUsingKeyFrames>
                       </Storyboard -->
                </VisualState>
                <VisualState x:Name="Pressed">
                  <!-- Storyboard>
                       <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UnderlineTextBlock" Storyboard.TargetProperty="Visibility" Duration="0">
                       <DiscreteObjectKeyFrame KeyTime="0">
                       <DiscreteObjectKeyFrame.Value>
                       <Visibility>Visible</Visibility>
                       </DiscreteObjectKeyFrame.Value>
                       </DiscreteObjectKeyFrame>
                       </ObjectAnimationUsingKeyFrames>
                       </Storyboard -->
                </VisualState>
                <VisualState x:Name="Disabled">
                  <!-- Storyboard>
                       <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility" Duration="0">
                       <DiscreteObjectKeyFrame KeyTime="0">
                       <DiscreteObjectKeyFrame.Value>
                       <Visibility>Visible</Visibility>
                       </DiscreteObjectKeyFrame.Value>
                       </DiscreteObjectKeyFrame>
                       </ObjectAnimationUsingKeyFrames>
                       </Storyboard -->
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <!-- Storyboard>
                       <DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                       </Storyboard -->
                </VisualState>
                <VisualState x:Name="Unfocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!-- TextBlock
                 x:Name="UnderlineTextBlock"
                 Text="{TemplateBinding Content}"
                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                 Margin="{TemplateBinding Padding}"
                 TextDecorations="Underline"
                 Visibility="Collapsed"/ -->
            <!-- TextBlock Canvas.ZIndex="1"
                 x:Name="DisabledOverlay"
                 Text="{TemplateBinding Content}"
                 Foreground="#FFAAAAAA"
                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                 Margin="{TemplateBinding Padding}"
                 Visibility="Collapsed"/ -->
            <ContentPresenter 
                x:Name="contentPresenter"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"/>
            <!-- Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" / -->
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <!-- Style TargetType="Button" x:Key="base" >
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Background" Value="{x:Null}" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="0" />
  </Style -->



  <Style TargetType="sdk:Label">
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>

  <Style x:Key="SundayLabel" TargetType="sdk:Label">
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Foreground" Value="Red" />
    <Setter Property="Background" Value="{x:Null}"/>
  </Style>
    
  <Style x:Key="Sunday" TargetType="Button" BasedOn="{StaticResource base}">
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Foreground" Value="Red" />
    <Setter Property="Background" Value="{x:Null}"/>
  </Style>

  <Style x:Key="Saturday" TargetType="ContentControl" >
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Foreground" Value="Blue" />
  </Style>

  <Style x:Key="LinkType" TargetType="Button">
    <Setter Property="Foreground" Value="#FF73A9D8" />
    <!-- Setter Property="Padding" Value="2,0,2,0"/ -->
    <Setter Property="Padding" Value="0,0,0,0"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Cursor="{TemplateBinding Cursor}"
                Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                        Storyboard.TargetName="UnderlineTextBlock"
                        Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <!-- ObjectAnimationUsingKeyFrames
                        Storyboard.TargetName="UnderlineTextBlock"
                        Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames -->
                    <DoubleAnimation
                        Storyboard.TargetName="FocusVisualElement"
                        Storyboard.TargetProperty="Opacity"
                        Duration="0" To="1"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <!-- Storyboard>
                    <DoubleAnimation
                        Storyboard.TargetName="FocusVisualElement"
                        Storyboard.TargetProperty="Opacity"
                        Duration="0" To="1"/>
                  </Storyboard -->
                </VisualState>
                <VisualState x:Name="Unfocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <TextBlock x:Name="UnderlineTextBlock"
                       Text="{TemplateBinding Content}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       Margin="{TemplateBinding Padding}"
                       TextDecorations="Underline"
                       Visibility="Collapsed"/>
            <TextBlock Canvas.ZIndex="1"
                       x:Name="DisabledOverlay"
                       Text="{TemplateBinding Content}"
                       Foreground="#FFAAAAAA"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       Margin="{TemplateBinding Padding}"
                       Visibility="Collapsed"/>
            <ContentPresenter x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
            <Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="ToolTip">
    <Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">
      <Grid.RenderTransform>
        <TranslateTransform x:Name="Translation" X="-25" />
      </Grid.RenderTransform>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="OpenStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0" />
            <VisualTransition To="Open" GeneratedDuration="0:0:0.2">
              <Storyboard>
                <DoubleAnimation Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                  <DoubleAnimation.EasingFunction>
                    <BackEase Amplitude=".3" EasingMode="EaseOut" />
                  </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
              </Storyboard>
            </VisualTransition>
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Closed">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Open">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" Duration="0" />
              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>

      <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5" />
      <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4" />
      <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3" />
      <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2" />

      <Border Background="#FFDC000C" CornerRadius="2">
        <TextBlock UseLayoutRounding="false" Foreground="White" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" />
      </Border>
    </Grid>
  </ControlTemplate>  

  <Style TargetType="sdk:TreeView" x:Key="tmp" >
    <!-- Setter Property="Background" Value="#FFFFFFFF" / -->
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="#FF000000" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Cursor" Value="Arrow" />
    <!-- Setter Property="BorderThickness" Value="1" / -->
    <Setter Property="BorderThickness" Value="0" />
    <!-- Setter Property="Padding" Value="1" / -->
    <Setter Property="Padding" Value="0" />
    <Setter Property="BorderBrush" Value="#FF000000" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="sdk:TreeView">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="MouseOver" />
                  <VisualState x:Name="Pressed" />
                  <VisualState x:Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Unfocused" />
                  <VisualState x:Name="Focused" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      CornerRadius="2">
                <Border Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}" Margin="0">
                  <ScrollViewer x:Name="ScrollViewer"
                                HorizontalScrollBarVisibility="Auto"
                                VerticalScrollBarVisibility="Auto"
                                Background="{x:Null}"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                IsTabStop="False" TabNavigation="Once"
                                Padding="0">
                    <ItemsPresenter Margin="1,0,0,0" />
                  </ScrollViewer>
                </Border>
              </Border>
              <!-- Border BorderBrush="Black" BorderThickness="1">
                <ScrollViewer x:Name="ScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Background="{x:Null}" BorderBrush="Transparent" BorderThickness="0" IsTabStop="False" TabNavigation="Once" Margin="0" Padding="0" >
                  <ItemsPresenter Margin="0" />
                </ScrollViewer>
              </Border -->
              

            </Grid>
          </ControlTemplate>
        </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="sdk:TreeViewItem" x:Key="tmp2" >
    <!-- Setter Property="Padding" Value="3" / -->
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Cursor" Value="Arrow" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="TabNavigation" Value="Once" />
    <!-- Setter Property="Margin" Value="0 1 0 0" / -->
    <Setter Property="Margin" Value="0" />
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="sdk:TreeViewItem">
          <!-- Border BorderBrush="red" BorderThickness="1" -->
          <StackPanel Background="{x:Null}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Foreground" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <SolidColorBrush Color="#FF999999" />
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <!-- Storyboard>
                       <DoubleAnimation Storyboard.TargetName="Selection" Storyboard.TargetProperty="Opacity" Duration="0" To=".75" />
                       </Storyboard -->
                </VisualState>
                <VisualState x:Name="SelectedInactive">
                  <!-- Storyboard>
                       <DoubleAnimation Storyboard.TargetName="Selection" Storyboard.TargetProperty="Opacity" Duration="0" To=".2" />
                         <ColorAnimation Storyboard.TargetName="SelectionFill" Storyboard.TargetProperty="Color" Duration="0" To="#FF999999" />
                         <ColorAnimation Storyboard.TargetName="SelectionStroke" Storyboard.TargetProperty="Color" Duration="0" To="#FF333333" />
                         </Storyboard -->
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HasItemsStates">
                <VisualState x:Name="HasItems" />
                <VisualState x:Name="NoItems">
                  <!-- Storyboard>
                         <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Visibility" Duration="0">
                         <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                         </ObjectAnimationUsingKeyFrames>
                    </Storyboard -->
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Collapsed" />
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <StackPanel Orientation="Horizontal">
              <ToggleButton x:Name="ExpanderButton" HorizontalAlignment="Right" VerticalAlignment="Center" IsTabStop="False" TabNavigation="Once">
                <ToggleButton.Template>
                  <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Root" Background="Transparent">
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                          <VisualState x:Name="Normal" />
                          <VisualState x:Name="MouseOver">
                            <Storyboard>
                              <ColorAnimation Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="(Path.Stroke).Color" To="#FF1BBBFA" Duration="0" />
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Disabled">
                            <Storyboard>
                              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To=".7" Duration="0" />
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                          <VisualState x:Name="Unchecked" />
                          <VisualState x:Name="Checked">
                            <Storyboard>
                              <DoubleAnimation
                                  Storyboard.TargetName="UncheckedVisual"
                                  Storyboard.TargetProperty="Opacity"
                                  To="0" Duration="0" />
                              <DoubleAnimation
                                  Storyboard.TargetName="CheckedVisual"
                                  Storyboard.TargetProperty="Opacity"
                                  To="1" Duration="0" />
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Grid HorizontalAlignment="Right" Margin="0">
                        <Path x:Name="UncheckedVisual" Width="6" Height="9" Fill="#FFFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Right" Data="M 0,0 L 0,9 L 5,4.5 Z" StrokeThickness="1" StrokeLineJoin="Miter">
                          <Path.Stroke>
                            <SolidColorBrush Color="#FF989898" />
                          </Path.Stroke>
                        </Path>

                        <!-- Path x:Name="CheckedVisual" Opacity="0" Width="6" Height="6" Fill="#FF262626" VerticalAlignment="Center" HorizontalAlignment="Right" Data="M 6,0 L 6,6 L 0,6 Z" StrokeLineJoin="Miter" / -->
                        <Path x:Name="CheckedVisual"
                              Opacity="0" Width="6" Height="9"
                              Fill="#FFFFFFFF"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Right"
                              Data="M 0,1 L 5,1 L 2.5,7 Z"
                              StrokeLineJoin="Miter" >
                          <Path.Stroke>
                              <SolidColorBrush Color="#FF989898" />
                          </Path.Stroke>
                        </Path>
                      </Grid>
                    </Grid>
                  </ControlTemplate>
                </ToggleButton.Template>
              </ToggleButton>
              <Grid Cursor="{TemplateBinding Cursor}">
                <ContentPresenter Content="{TemplateBinding Header}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  HorizontalAlignment="Center" />
              </Grid>                    
              <!-- Rectangle x:Name="Selection" Grid.Column="1" Opacity="0" StrokeThickness="1" IsHitTestVisible="False" RadiusX="2" RadiusY="2">
                        <Rectangle.Fill>
                            <SolidColorBrush x:Name="SelectionFill" Color="#FFBADDE9" />
                        </Rectangle.Fill>
                        <Rectangle.Stroke>
                            <SolidColorBrush x:Name="SelectionStroke" Color="#FF6DBDD1" />
                        </Rectangle.Stroke>
                    </Rectangle -->
              <!-- Button x:Name="Header" ClickMode="Hover"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Cursor="{TemplateBinding Cursor}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            IsTabStop="False" TabNavigation="Once"
                            FontFamily="Arial" FontSize="11" 
                             >
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                              <Border BorderBrush="Blue" BorderThickness="1">
                              <Grid Background="{TemplateBinding Background}"
                                    Margin="0">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="Hover" Storyboard.TargetProperty="Opacity" Duration="0" To=".5" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" VerticalAlignment="Top" />
                                </Grid>
                              </Border>
                            </ControlTemplate>
                        </Button.Template>
                        <Button.Content>
                            <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        </Button.Content>
                    </Button -->
            </StackPanel>
            <ItemsPresenter x:Name="ItemsHost" Visibility="Visible" Margin="10,0,0,0"/>
          </StackPanel>
          <!-- /Border -->
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="Test" TargetType="sdk:TreeViewItem">
    <!-- Setter Property="Padding" Value="3" / -->
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Cursor" Value="Arrow" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="TabNavigation" Value="Once" />
    <!-- Setter Property="Margin" Value="0 1 0 0" / -->
    <Setter Property="Margin" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="sdk:TreeViewItem">
          <Grid Background="{x:Null}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                        Storyboard.TargetName="Header"
                        Storyboard.TargetProperty="Foreground" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <SolidColorBrush Color="#FF999999" />
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Selection"
                                     Storyboard.TargetProperty="Opacity"
                                     Duration="0" To=".75" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedInactive">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Selection"
                                     Storyboard.TargetProperty="Opacity"
                                     Duration="0" To=".2" />
                    <ColorAnimation Storyboard.TargetName="SelectionFill"
                                    Storyboard.TargetProperty="Color"
                                    Duration="0" To="#FF999999" />
                    <ColorAnimation Storyboard.TargetName="SelectionStroke"
                                    Storyboard.TargetProperty="Color"
                                    Duration="0" To="#FF333333" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Collapsed" />
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                        Storyboard.TargetName="ItemsHost"
                        Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="15" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!-- ToggleButton x:Name="ExpanderButton" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsTabStop="False" TabNavigation="Once" -->
            <ToggleButton x:Name="ExpanderButton" HorizontalAlignment="Left" VerticalAlignment="Stretch" IsTabStop="False" TabNavigation="Once">
              <ToggleButton.Template>
                <ControlTemplate TargetType="ToggleButton">
                  <Grid x:Name="Root" Background="Transparent">
                    <!-- Grid HorizontalAlignment="Right" Margin="2 2 5 2" -->
                    <Grid HorizontalAlignment="Left" Margin="0" >
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                          <VisualState x:Name="Normal" />
                          <VisualState x:Name="MouseOver">
                            <Storyboard>
                              <ColorAnimation Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="(Path.Stroke).Color" To="#FF1BBBFA" Duration="0" />
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Disabled">
                            <Storyboard>
                              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To=".7" Duration="0" />
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>

                      <Path x:Name="UncheckedVisual" Width="6" Height="9" Fill="#FFFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Left" Data="M 0,0 L 0,9 L 5,4.5 Z" StrokeThickness="1" StrokeLineJoin="Miter">
                        <Path.Stroke>
                          <SolidColorBrush Color="#FF989898" />
                        </Path.Stroke>
                      </Path>
                      <Path x:Name="CheckedVisual" Opacity="0" Width="6" Height="6" Fill="#FF262626" VerticalAlignment="Center" HorizontalAlignment="Left" Data="M 6,0 L 6,6 L 0,6 Z" StrokeLineJoin="Miter" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ToggleButton.Template>
            </ToggleButton>
            <Rectangle x:Name="Selection" Grid.Column="1" Opacity="0" StrokeThickness="1" IsHitTestVisible="False" RadiusX="2" RadiusY="2">
              <Rectangle.Fill>
                <SolidColorBrush x:Name="SelectionFill" Color="#FFBADDE9" />
              </Rectangle.Fill>
              <Rectangle.Stroke>
                <SolidColorBrush x:Name="SelectionStroke" Color="#FF6DBDD1" />
              </Rectangle.Stroke>
            </Rectangle>
            <Button x:Name="Header" Grid.Column="1" ClickMode="Hover" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False" TabNavigation="Once">
              <Button.Template>
                <ControlTemplate TargetType="Button">
                  <Grid Background="{TemplateBinding Background}">
                  </Grid>
                </ControlTemplate>
              </Button.Template>
              <Button.Content>
                <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
              </Button.Content>
            </Button>

            <!-- Border x:Name="Validation" Grid.Column="1" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FFDB000C" CornerRadius="2" Visibility="Collapsed" -->
            <Border x:Name="Validation" Grid.Column="1" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FFDB000C" CornerRadius="2" Visibility="Visible">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="ValidationToolTip" Template="{StaticResource CommonValidationToolTipTemplate}" Placement="Right" PlacementTarget="{Binding ElementName=Header}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="True" />
              </ToolTipService.ToolTip>
              <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                <Path Margin="-1,3,0,0" Fill="#FFDC000C" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 Z" />
                <Path Margin="-1,3,0,0" Fill="#FFFFFFFF" Data="M 0,0 L2,0 L 8,6 L8,8" />
              </Grid>
            </Border>

            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" />

          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
            
</ResourceDictionary>
